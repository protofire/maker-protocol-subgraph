description: Multi Collateral Dai (MCD)
specVersion: 0.0.2

schema:
  file: ./schema.graphql

dataSources:
  #
  # Core Module
  #

  # Vault Engine
  - name: Vat
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Vat
      address: '0x35d1b3f3d7966a1dfe207aa4514c12a259a0492b'
      startBlock: 8928152
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/core/vat.ts
      abis:
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - CollateralType
        - SystemState
        - UserProxy
        - Vault
      eventHandlers:
        ### Administration ###

        # function init(bytes32 ilk)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x3b66319500000000000000000000000000000000000000000000000000000000'
          handler: handleInit

        # function file(bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x29ae811400000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function file(bytes32 ilk, bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x1a0b287e00000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function cage()
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x6924500900000000000000000000000000000000000000000000000000000000'
          handler: handleCage

        ### Fungibility ###

        # function slip(bytes32 ilk, address usr, int256 wad)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x7cdd3fde00000000000000000000000000000000000000000000000000000000'
          handler: handleSlip

        # function flux(bytes32 ilk, address src, address dst, uint256 rad)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x6111be2e00000000000000000000000000000000000000000000000000000000'
          handler: handleFlux

        # function move(address src, address dst, uint256 rad)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xbb35783b00000000000000000000000000000000000000000000000000000000'
          handler: handleMove

        ### CDP Manipulation ###

        # function frob(bytes32 i, address u, address v, address w, int256 dink, int256 dart)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x7608870300000000000000000000000000000000000000000000000000000000'
          handler: handleFrob

        ### CDP Fungibility ###

        # function fork(bytes32 ilk, address src, address dst, int256 dink, int256 dart)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x870c616d00000000000000000000000000000000000000000000000000000000'
          handler: handleFork

        ### CDP Confiscation ###

        # function grab(bytes32 i, address u, address v, address w, int256 dink, int256 dart)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x7bab3f4000000000000000000000000000000000000000000000000000000000'
          handler: handleGrab

        ### Settlement ###

        # function heal(uint256 rad)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xf37ac61c00000000000000000000000000000000000000000000000000000000'
          handler: handleHeal

        # function suck(address u, address v, uint256 rad)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xf24e23eb00000000000000000000000000000000000000000000000000000000'
          handler: handleSuck

        ### Rates ###

        # function fold(bytes32 i, address u, int256 rate)
        - event: LogNote(indexed bytes4,indexed bytes32,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xb65337df00000000000000000000000000000000000000000000000000000000'
          handler: handleFold

  #  Liaison between the oracles and core contracts
  - name: Spot
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Spotter
      address: '0x65c79fcb50ca1594b025960e539ed7a9a6d434a3'
      startBlock: 8928152
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/core/spot.ts
      abis:
        - name: Spotter
          file: ./abis/Spotter.json
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - CollateralPrice
        - CollateralType
        - SystemState
      eventHandlers:
        ### Administration ###

        # file(bytes32 ilk, bytes32 what, address pip_)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xebecb39d00000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # file(bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x29ae811400000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # file(bytes32 ilk, bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x1a0b287e00000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        ### Update value ###

        # event Poke(bytes32 ilk, bytes32 val, uint256 spot)
        - event: Poke(bytes32,bytes32,uint256)
          handler: handlePoke

        # function cage()
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x6924500900000000000000000000000000000000000000000000000000000000'
          handler: handleCage

  #
  # System Stabilizer Module
  #

  # Surplus Auction
  - name: Flap
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Flapper
      address: '0xdfe0fb1be2a52cdbf8fb962d5701d7fd0902db9f'
      startBlock: 8928163
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/system-stabilizer/flap.ts
      abis:
        - name: Flapper
          file: ./abis/Flapper.json
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - SystemState
        - SurplusAuction
      eventHandlers:
        ### Admin ###

        # function file(bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x29ae811400000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function cage(uint256 rad)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xa2f91af200000000000000000000000000000000000000000000000000000000'
          handler: handleCage

        ### Auction ###

        # event Kick (uint256 id, uint256 lot, uint256 bid)
        - event: Kick(uint256,uint256,uint256)
          handler: handleKick

        # function tick(uint256 id)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xfc7b6aee00000000000000000000000000000000000000000000000000000000'
          handler: handleTick

        # function deal(uint256 id)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xc959c42b00000000000000000000000000000000000000000000000000000000'
          handler: handleDeal

        # function tend(uint256 id, uint256 bid)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x4712f8030000000000000000000000000000000000000000000000000000000000'
          handler: handleTend

        # function yank(uint256 id)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x26e027f100000000000000000000000000000000000000000000000000000000'
          handler: handleYank

  #  Liquidation Module
  - name: Dog
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Dog
      address: '0x135954d155898D42C90D2a57824C690e0c7BEf1B'
      startBlock: 12246358
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/liquidation/dog.ts
      abis:
        - name: Dog
          file: ./abis/Dog.json
      entities:
        - SystemState
        - LiveChangeLog
        - CollateralType
        - SystemState
      eventHandlers:
        - event: Cage()
          handler: handleCage
        - event: Digs(indexed bytes32,uint256)
          handler: handleDigs

        ### Administration ###

        - event: File(indexed bytes32,address)
          handler: handleFileVow

        - event: File(indexed bytes32,indexed bytes32,address)
          handler: handleFileHole

        - event: File(indexed bytes32,indexed bytes32,uint256)
          handler: handleFileChop

        - event: File(indexed bytes32,uint256)
          handler: handleFileClip

  # Debt Auction
  - name: Flop
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Flopper
      address: '0x4d95a049d5b0b7d32058cd3f2163015747522e99'
      startBlock: 9006717
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/system-stabilizer/flop.ts
      abis:
        - name: Flopper
          file: ./abis/Flopper.json
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - SystemState
        - DebtAuction
      eventHandlers:
        ### Admin ###

        # function file(bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x29ae811400000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        ### Auction ###

        - event: Kick(uint256,uint256,uint256,indexed address)
          handler: handleKick

        # function tick(uint256 id)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xfc7b6aee00000000000000000000000000000000000000000000000000000000'
          handler: handleTick

        # function deal(uint256 id)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xc959c42b00000000000000000000000000000000000000000000000000000000'
          handler: handleDeal

        ### Shutdown ###

        # function cage()
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x6924500900000000000000000000000000000000000000000000000000000000'
          handler: handleCage

        # function yank(unit256 id)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x26e027f100000000000000000000000000000000000000000000000000000000'
          handler: handleYank

        # function dent(uint256 id, uint256 lot, uint256 bid)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x5ff3a38200000000000000000000000000000000000000000000000000000000'
          handler: handleDent

  # Balance Sheet
  - name: Vow
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Vow
      address: '0xa950524441892a31ebddf91d3ceefa04bf454466'
      startBlock: 8928163
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/system-stabilizer/vow.ts
      abis:
        - name: Vow
          file: ./abis/Vow.json
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - SystemState
      eventHandlers:
        ### Administration ###

        # function file(bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x29ae811400000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function file(bytes32 what, address data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xd4e8be8300000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function cage()
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x6924500900000000000000000000000000000000000000000000000000000000'
          handler: handleCage

        ### Pop from debt-queue

        # function flog(uint era)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xd7ee674b00000000000000000000000000000000000000000000000000000000'
          handler: handleFlog

        ### Push to debt-queue ###

        # function fess(uint tab)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x697efb7800000000000000000000000000000000000000000000000000000000'
          handler: handleFess

        # function flap()
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x0e01198b00000000000000000000000000000000000000000000000000000000'
          handler: handleFlap

        # function flop()
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xbbbb0d7b00000000000000000000000000000000000000000000000000000000'
          handler: handleFlop

        # function kiss(uint rad)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x2506855a000000000000000000000000000000000000000000000000000000000000000a'
          handler: handlekiss

  #
  # Rates Module
  #

  # Accumulation of Stability Fees for collateral types
  - name: Jug
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Jug
      address: '0x19c0976f590d67707e62397c87829d896dc0f1f1'
      startBlock: 8928160
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/rates/jug.ts
      abis:
        - name: Jug
          file: ./abis/Jug.json
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - CollateralType
        - SystemState
      eventHandlers:
        ### Administration ###

        # init(bytes32 ilk)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x3b66319500000000000000000000000000000000000000000000000000000000'
          handler: handleInit

        # function file(bytes32 ilk, bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x1a0b287e00000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function file(bytes32 what, address data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xd4e8be8300000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function file(bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x29ae811400000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        ### Stability Fee Collection ###

        # function drip(bytes32 ilk)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x44e2a5a800000000000000000000000000000000000000000000000000000000'
          handler: handleDrip

  # Dai Savings Rate
  - name: Pot
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Pot
      address: '0x197e90f9fad81970ba7976f33cbd77088e5d7cf7'
      startBlock: 8928160
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/rates/pot.ts
      abis:
        - name: Pot
          file: ./abis/Pot.json
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - SystemState
      eventHandlers:
        ### Administration ###

        # function file(bytes32 what, uint256 data)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x29ae811400000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function cage()
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x6924500900000000000000000000000000000000000000000000000000000000'
          handler: handleCage

        # function file(bytes32 what, address addr)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xd4e8be8300000000000000000000000000000000000000000000000000000000'
          handler: handleFile

        # function join(uint wad)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x049878f300000000000000000000000000000000000000000000000000000000'
          handler: handleJoin

        # function exit(uint wad)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0x7f8661a100000000000000000000000000000000000000000000000000000000'
          handler: handleExit

  #
  # MKR Module
  #

  # Mkr
  - name: DSToken
    kind: ethereum/contract
    network: mainnet
    source:
      abi: DSToken
      address: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
      startBlock: 12805415
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/mkr/dsToken.ts
      abis:
        - name: DSToken
          file: ./abis/DSToken.json
      entities:
        - SystemState
        - User
        - MkrTransfer
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: Mint(indexed address,uint256)
          handler: handleMint
        - event: Burn(indexed address,uint256)
          handler: handleBurn

  #
  # Proxy Module
  #

  # Used to deploy new user proxy instances
  - name: ProxyFactory
    kind: ethereum/contract
    network: mainnet
    source:
      abi: DSProxyFactory
      address: '0xa26e15c895efc0616177b7c1e7270a4c7d51c997'
      startBlock: 5834580
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/proxy/proxy-factory.ts
      abis:
        - name: DSProxyFactory
          file: ./abis/DSProxyFactory.json
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - SystemState
        - User
        - UserProxy
      eventHandlers:
        - event: Created(indexed address,indexed address,address,address)
          handler: handleCreated

  # Allow users to interact with their Vaults in an easy way, treating them as non-fungible tokens (NFTs)
  - name: CdpManager
    kind: ethereum/contract
    network: mainnet
    source:
      abi: DssCdpManager
      address: '0x5ef30b9986345249bc32d8928b7ee64de9435e39'
      startBlock: 8928198
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/proxy/cdp-manager.ts
      abis:
        - name: DssCdpManager
          file: ./abis/DssCdpManager.json
        - name: Vat
          file: ./abis/Vat.json
      entities:
        - CollateralType
        - SystemState
        - UserProxy
        - Vault
      eventHandlers:
        # function open(bytes32 ilk, address usr)
        - event: NewCdp(indexed address,indexed address,indexed uint256)
          handler: handleOpen

        # function give(uint cdp, address dst)
        - event: LogNote(indexed bytes4,indexed address,indexed bytes32,indexed bytes32,bytes)
          topic0: '0xfcafcc6800000000000000000000000000000000000000000000000000000000'
          handler: handleGive

  #
  # DAI Module
  #
  - name: Dai
    kind: ethereum/contract
    network: mainnet
    source:
      address: '0x6b175474e89094c44da98b954eedeac495271d0f'
      abi: Dai
      startBlock: 8928158
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/dai/dai.ts
      entities:
        - Approval
        - Transfer
      abis:
        - name: Dai
          file: ./abis/Dai.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  #
  # Liquidation Module
  #
  # Auction Initiation from Liquidation
  - name: Clipper
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Clipper
      address: '0xc67963a226eddd77B91aD8c421630A1b0AdFF270'
      startBlock: 12329686
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/modules/liquidation/clipper.ts
      abis:
        - name: Clipper
          file: ./abis/Clipper.json
      entities:
        - SystemState
        - SaleAuction
      eventHandlers:
        - event: File(indexed bytes32,uint256)
          handler: handleFile
        - event: File(indexed bytes32,address)
          handler: handleFile
        - event: Kick(indexed uint256,uint256,uint256,uint256,indexed address,indexed address,uint256)
          handler: handleKick
        - event: Redo(indexed uint256,uint256,uint256,uint256,indexed address,indexed address,uint256)
          handler: handleRedo
        - event: Take(indexed uint256,uint256,uint256,uint256,uint256,uint256,indexed address)
          handler: handleTake
        - event: Yank(uint256)
          handler: handleYank
